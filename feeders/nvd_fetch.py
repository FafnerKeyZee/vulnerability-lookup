import datetime
import json
import requests
import time

NVD_API = "https://services.nvd.nist.gov/rest/json/cves/2.0/?"
NVD_DATE_FORMAT = "%Y-%m-%dT%H:%M:%S"
SLEEP_TIME = 4
OUTPUT_DIR = "../output/cves/"


def nvd_request(*args, **kwargs):
    r = requests.get(*args, **kwargs)

    if r.status_code != requests.codes.ok:
        raise Exception(f"API returning wrong HTTP error code: {r.status_code}")

    return r


def nvd_update(LastUpdate=None):
    if LastUpdate is None:
        # Assuming the first CVE allocation is in 1999
        # LastUpdate = datetime.datetime(1999, 1, 1)
        query = ""
    else:
        query = "lastModStartDate={}&lastModEndDate={}".format(
            LastUpdate.strftime(NVD_DATE_FORMAT),
            (datetime.datetime.now() - datetime.timedelta(seconds=10)).strftime(
                NVD_DATE_FORMAT
            ),
        )

    print(query)

    index = 0
    totalResults = None
    page = None
    resultsPerPage = 100
    while page is None or index < totalResults:
        nvd_value = nvd_request(
            f"{NVD_API}{query}&startIndex={index}&resultsPerPage={resultsPerPage}"
        ).json()
        if totalResults is None:
            totalResults = nvd_value["totalResults"]
            print(totalResults)
        page = int(nvd_value["resultsPerPage"])
        print(f"index:{index} totalResults:{totalResults}")
        index += resultsPerPage
        with open(f"{OUTPUT_DIR}/{index}.json", 'w') as dump:
            dump.write(json.dumps(nvd_value))
        time.sleep(SLEEP_TIME)

    return True


if __name__ == "__main__":
    nvd_update()
