from sqlalchemy import func
from sqlalchemy.dialects.postgresql import JSONB
from sqlalchemy.orm import backref

from website.web.bootstrap import db


class Comment(db.Model):  # type: ignore[name-defined, misc]
    """Represent a comment related to a security advisory (vulnerability).
    The actual data is stored as JSON in the JSONB field."""

    id = db.Column(db.Integer, primary_key=True)
    data = db.Column(JSONB, default={})
    vuln_id = db.Column(db.String(), nullable=False)
    is_published = db.Column(db.Boolean(), default=True)
    created_at = db.Column(
        db.DateTime(timezone=True), server_default=func.now(), nullable=False
    )
    updated_at = db.Column(
        db.DateTime(timezone=True),
        server_default=func.now(),
        onupdate=func.now(),
        nullable=False,
    )

    # foreign keys
    author_id = db.Column(db.Integer(), db.ForeignKey("user.id"), nullable=False)

    # relationships
    author = db.relationship(
        "User",
        backref=backref("creator", uselist=False),
        uselist=False,
        foreign_keys=[author_id],
    )
