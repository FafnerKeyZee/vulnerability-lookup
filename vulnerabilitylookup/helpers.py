#!/usr/bin/env python3

import sys
import configparser

from datetime import datetime
from typing import Dict

from .default import get_homedir  # , get_config


def fromisoformat_wrapper(date_iso: str, /) -> datetime:
    # Python < 3.11 cannot load times with a Z instead of +00:00
    if sys.version_info < (3, 11) and date_iso.endswith('Z'):
        date_iso = date_iso.replace('Z', '+00:00')
    return datetime.fromisoformat(date_iso)


def get_config_feeder(feeder_name: str) -> Dict[str, str]:
    modules_config_file = get_homedir() / 'config' / 'modules.cfg'
    if not modules_config_file.exists():
        modules_config_file = get_homedir() / 'config' / 'modules.cfg.sample'

    config = configparser.ConfigParser()
    config.read(modules_config_file)
    if f'feeder:{feeder_name}' in config:
        return dict(config.items(f'feeder:{feeder_name}'))
    return {}
