#!/usr/bin/env python3

from feedgen.feed import FeedGenerator  # type: ignore[import-untyped]
from flask import (
    Blueprint,
    request,
    render_template,
)
from flask_login import login_required  # type: ignore[import-untyped]

from vulnerabilitylookup.default import get_config
from website.models import Bundle
from website.web.bootstrap import application
from website.web.permissions import admin_permission

bundle_bp = Blueprint(
    "bundle_bp", __name__, url_prefix="/bundle", template_folder="bundles"
)
bundles_bp = Blueprint(
    "bundles_bp", __name__, url_prefix="/bundles", template_folder="bundles"
)

local_instance_name = get_config("generic", "local_instance_name").lower()


@bundles_bp.route("/", methods=["GET"])
def list_bundles() -> str:
    return render_template("bundles/bundles.html")


@bundle_bp.route("/create", methods=["GET"])
@bundle_bp.route("/edit/str:bundle_uuid>", methods=["GET"])
@login_required  # type: ignore[misc]
@admin_permission.require(http_exception=403)  # type: ignore[misc]
def form(bundle_uuid: str = "") -> str:
    """Returns a form in order to edit a bundle."""
    action = "Create a bundle"
    head_titles = [action]

    if not bundle_uuid:
        # Creation of a new bundle
        return render_template(
            "bundles/edit_bundle.html",
            action=action,
            head_titles=head_titles,
            bundle=None,
        )

    # Edition of an existing bundle
    bundle = Bundle.query.filter(Bundle.uuid == bundle_uuid).first()
    action = "Edit a bundle"
    head_titles = [action]
    head_titles.append(bundle.name)

    return render_template(
        "bundles/edit_bundle.html",
        action=action,
        head_titles=head_titles,
        bundle=bundle,
    )
