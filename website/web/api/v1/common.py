#! /usr/bin/env python
from typing import Any

import uuid

from flask import request
from flask_login import current_user  # type: ignore[import-untyped]
from flask_restx import abort  # type: ignore[import-untyped]

from website.models import User
from website.web.permissions import login_user_bundle


def auth_func(func: Any) -> Any:
    """Authentication decorator."""

    def wrapper(*args: str, **kwargs: int) -> Any:
        if not current_user.is_authenticated:
            if "X-API-KEY" in request.headers:
                token = request.headers.get("X-API-KEY", False)
                if token:
                    user = User.query.filter(User.apikey == token).first()
                    if not user:
                        abort(401, Error="Unauthorized.")
                    if not user.is_active:
                        abort(403, Error="Account is not active.")
                    login_user_bundle(user)
            else:
                abort(401, Error="Authentication required.")
        return func(*args, **kwargs)

    wrapper.__doc__ = func.__doc__
    wrapper.__name__ = func.__name__
    return wrapper
