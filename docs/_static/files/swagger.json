{
    "swagger": "2.0",
    "basePath": "/",
    "paths": {
        "/api/browse": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get the known vendors",
                "operationId": "get_vendors",
                "tags": [
                    "api"
                ]
            }
        },
        "/api/browse/{vendor}": {
            "parameters": [
                {
                    "name": "vendor",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get the known products for a vendor",
                "operationId": "get_vendor_products",
                "tags": [
                    "api"
                ]
            }
        },
        "/api/bundle/": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BundlesList"
                            }
                        }
                    },
                    "400": {
                        "description": "JSON validation failed or incorrect payload to instantiate a bundle."
                    },
                    "403": {
                        "description": "Administrator permission required."
                    }
                },
                "description": "Create a bundle.",
                "operationId": "post_bundles_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Bundle"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "bundle"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BundlesList"
                            }
                        }
                    }
                },
                "summary": "List all bundles",
                "operationId": "list_bundles",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "type": "string",
                        "description": "UUID of the bundle."
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "type": "string",
                        "description": "Author (login) of the bundle."
                    },
                    {
                        "name": "vuln_id",
                        "in": "query",
                        "type": "string",
                        "description": "Id of a vulnerability referenced by the bundle."
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "bundle"
                ]
            }
        },
        "/api/bundle/{bundle_uuid}": {
            "parameters": [
                {
                    "name": "bundle_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "403": {
                        "description": "Administrator permission required or not the author of the bundle."
                    }
                },
                "summary": "Endpoint for deleting a bundle",
                "description": "Delete a bundle.\nOnly an admin can delete a bundle.",
                "operationId": "delete_bundle_item",
                "tags": [
                    "bundle"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Bundle"
                        }
                    }
                },
                "description": "Get a bundle with its UUID.",
                "operationId": "get_bundle_item",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "bundle"
                ]
            }
        },
        "/api/comment/": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommentsList"
                            }
                        }
                    },
                    "400": {
                        "description": "JSON validation failed or incorrect payload to instantiate a comment."
                    },
                    "403": {
                        "description": "Commenter permission required or not the author of the comment."
                    }
                },
                "summary": "Create a new comment related to a security advisory (vulnerability)",
                "description": "Create a comment related to a security advisory.",
                "operationId": "post_comments_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "comment"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommentsList"
                            }
                        }
                    }
                },
                "summary": "List all comments",
                "operationId": "list_comments",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "type": "string",
                        "description": "UUID of the comment."
                    },
                    {
                        "name": "vuln_id",
                        "in": "query",
                        "type": "string",
                        "description": "Vulnerability related to the comment."
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "type": "string",
                        "description": "Author of the comment."
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "comment"
                ]
            }
        },
        "/api/comment/{comment_uuid}": {
            "parameters": [
                {
                    "name": "comment_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "403": {
                        "description": "Commenter permission required or not the author of the comment."
                    }
                },
                "summary": "Endpoint for deleting a comment",
                "description": "Delete a comment.",
                "operationId": "delete_comment_item",
                "tags": [
                    "comment"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CommentsList"
                        }
                    }
                },
                "description": "Get a comment.",
                "operationId": "get_comment_item",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "comment"
                ]
            }
        },
        "/api/cve/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "JSON validation failed."
                    },
                    "403": {
                        "description": "Reporter permission required."
                    },
                    "422": {
                        "description": "Not possible to edit a vulnerability from the requested source."
                    }
                },
                "summary": "Endpoint for creating and editing vulnerabilities in the local source",
                "description": "Create a vulnerability with the CVE version 5 format.",
                "operationId": "post_vulnerabilities_list",
                "tags": [
                    "api"
                ]
            }
        },
        "/api/cve/{vulnerability_id}": {
            "parameters": [
                {
                    "name": "vulnerability_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "403": {
                        "description": "Admin permission required."
                    },
                    "422": {
                        "description": "Not possible to edit a vulnerability from the requested source."
                    }
                },
                "summary": "Endpoint for deleting a vulnerability",
                "description": "Delete a vulnerability from the local source.\nWe only accept to delete vulnerabilities from the local source.",
                "operationId": "delete_vulnerability",
                "tags": [
                    "api"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get a vulnerability.",
                "operationId": "get_vulnerability",
                "tags": [
                    "api"
                ]
            }
        },
        "/api/dbInfo": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get more information about the current databases in use and when it was updated",
                "operationId": "get_info",
                "tags": [
                    "api"
                ]
            }
        },
        "/api/last": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get the last CVEs",
                "operationId": "get_last",
                "tags": [
                    "api"
                ]
            }
        },
        "/api/search/{vendor}/{product}": {
            "parameters": [
                {
                    "name": "vendor",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "product",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get the the vulnerabilities per vendor and a specific product",
                "operationId": "get_vendor_product_vulnerabilities",
                "tags": [
                    "api"
                ]
            }
        },
        "/api/user/": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "summary": "Create a non-admin user",
                "description": "Create a non-admin user.",
                "operationId": "post_users_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "login": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "organisation": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "user"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UsersList"
                            }
                        }
                    },
                    "403": {
                        "description": "Admin permission required."
                    }
                },
                "summary": "List all users",
                "description": "Only available to administrators.",
                "operationId": "list_users",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        },
        "/info": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get more information about the current databases in use and when it was updated",
                "operationId": "get_info",
                "tags": [
                    "default"
                ]
            }
        },
        "/last": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get the last CVEs",
                "operationId": "get_last",
                "tags": [
                    "default"
                ]
            }
        },
        "/last/{number}": {
            "parameters": [
                {
                    "name": "number",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get the last CVEs",
                "operationId": "get_last",
                "tags": [
                    "default"
                ]
            }
        },
        "/last/{source}": {
            "parameters": [
                {
                    "name": "source",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get the last CVEs",
                "operationId": "get_last",
                "tags": [
                    "default"
                ]
            }
        },
        "/last/{source}/{number}": {
            "parameters": [
                {
                    "name": "source",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "number",
                    "in": "path",
                    "required": true,
                    "type": "integer"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get the last CVEs",
                "operationId": "get_last",
                "tags": [
                    "default"
                ]
            }
        },
        "/redis_up": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Check if redis is up and running",
                "operationId": "get_redis_up",
                "tags": [
                    "default"
                ]
            }
        },
        "/vulnerability/": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "JSON validation failed."
                    },
                    "403": {
                        "description": "Reporter permission required."
                    },
                    "422": {
                        "description": "Not possible to edit a vulnerability from the requested source."
                    }
                },
                "summary": "Endpoint for creating and editing vulnerabilities in the local source",
                "description": "Create a vulnerability with the CVE version 5 format.",
                "operationId": "post_vulnerabilities_list",
                "tags": [
                    "default"
                ]
            }
        },
        "/vulnerability/{vulnerability_id}": {
            "parameters": [
                {
                    "name": "vulnerability_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "403": {
                        "description": "Admin permission required."
                    },
                    "422": {
                        "description": "Not possible to edit a vulnerability from the requested source."
                    }
                },
                "summary": "Endpoint for deleting a vulnerability",
                "description": "Delete a vulnerability from the local source.\nWe only accept to delete vulnerabilities from the local source.",
                "operationId": "delete_vulnerability",
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Get a vulnerability.",
                "operationId": "get_vulnerability",
                "tags": [
                    "default"
                ]
            }
        }
    },
    "info": {
        "title": "Vulnerability Lookup API",
        "version": "1.0.0",
        "description": "API to query Vulnerability Lookup.",
        "license": {
            "name": "GNU Affero General Public License version 3",
            "url": "https://www.gnu.org/licenses/agpl-3.0.html"
        }
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "apikey": {
            "type": "apiKey",
            "in": "header",
            "name": "X-API-KEY"
        }
    },
    "security": [
        {
            "apikey": []
        }
    ],
    "tags": [
        {
            "name": "default",
            "description": "default operations"
        },
        {
            "name": "api",
            "description": "core API operations"
        },
        {
            "name": "comment",
            "description": "comment related operations"
        },
        {
            "name": "user",
            "description": "user related operations"
        },
        {
            "name": "bundle",
            "description": "bundle related operations"
        }
    ],
    "definitions": {
        "CommentsList": {
            "properties": {
                "metadata": {
                    "description": "Metada related to the result.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/metadata"
                        }
                    ]
                },
                "data": {
                    "type": "array",
                    "description": "List of comments.",
                    "items": {
                        "$ref": "#/definitions/Comment"
                    }
                }
            },
            "type": "object"
        },
        "metadata": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Total number of the items of the data.",
                    "readOnly": true
                },
                "offset": {
                    "type": "integer",
                    "description": "Position of the first element of the data from the total data amount.",
                    "readOnly": true
                },
                "limit": {
                    "type": "integer",
                    "description": "Requested limit data.",
                    "readOnly": true
                }
            },
            "type": "object"
        },
        "Comment": {
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "Comment id."
                },
                "vulnerability_lookup_origin": {
                    "type": "string",
                    "description": "Comment id.",
                    "readOnly": true,
                    "default": "1a89b78e-f703-45f3-bb86-59eb712668bd"
                },
                "title": {
                    "type": "string",
                    "description": "Comment id."
                },
                "description": {
                    "type": "string",
                    "description": "Description."
                },
                "description_format": {
                    "type": "string",
                    "description": "Description format (markdown or text)."
                },
                "vulnerability": {
                    "type": "string",
                    "description": "Vulnerability id."
                },
                "creation_timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Updated time of the comment.",
                    "readOnly": true
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Updated time of the comment.",
                    "readOnly": true
                },
                "related_vulnerabilities": {
                    "type": "array",
                    "description": "One or more vulnerability references (CVE ID, GHSA-ID, PYSEC ID, etc.) for this comment.",
                    "items": {
                        "type": "string"
                    }
                },
                "meta": {
                    "type": "object",
                    "description": "Zero or more meta-fields."
                },
                "author": {
                    "readOnly": true,
                    "allOf": [
                        {
                            "$ref": "#/definitions/User"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "User": {
            "properties": {
                "login": {
                    "type": "string",
                    "description": "Login of the user.",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.",
                    "readOnly": true
                }
            },
            "type": "object"
        },
        "UsersList": {
            "properties": {
                "metadata": {
                    "description": "Metada related to the result.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/metadata"
                        }
                    ]
                },
                "data": {
                    "type": "array",
                    "description": "List of users.",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                }
            },
            "type": "object"
        },
        "Bundle": {
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "Bundle id."
                },
                "vulnerability_lookup_origin": {
                    "type": "string",
                    "description": "Bundle id.",
                    "readOnly": true,
                    "default": "1a89b78e-f703-45f3-bb86-59eb712668bd"
                },
                "name": {
                    "type": "string",
                    "description": "Bundle id."
                },
                "description": {
                    "type": "string",
                    "description": "Description."
                },
                "creation_timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Updated time of the bundle.",
                    "readOnly": true
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Updated time of the bundle.",
                    "readOnly": true
                },
                "related_vulnerabilities": {
                    "type": "array",
                    "description": "One or more vulnerability references (CVE ID, GHSA-ID, PYSEC ID, etc.) for this bundle.",
                    "items": {
                        "type": "string"
                    }
                },
                "meta": {
                    "type": "object",
                    "description": "Zero or more meta-fields."
                },
                "author": {
                    "readOnly": true,
                    "allOf": [
                        {
                            "$ref": "#/definitions/User"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "BundlesList": {
            "properties": {
                "metadata": {
                    "description": "Metada related to the result.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/metadata"
                        }
                    ]
                },
                "data": {
                    "type": "array",
                    "description": "List of bundles.",
                    "items": {
                        "$ref": "#/definitions/Bundle"
                    }
                }
            },
            "type": "object"
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}
