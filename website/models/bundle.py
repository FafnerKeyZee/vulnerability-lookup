import uuid
from sqlalchemy import func
from sqlalchemy.dialects.postgresql import JSONB, UUID

from website.web.bootstrap import db


class Bundle(db.Model):  # type: ignore[name-defined, misc]
    """Represent a comment related to a security advisory (vulnerability).
    The actual data is stored as JSON in the JSONB field."""

    uuid = db.Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4)
    vulnerability_lookup_origin = db.Column(UUID(as_uuid=True), nullable=False)
    name = db.Column(db.String(), nullable=False)
    description = db.Column(db.String(), nullable=False)
    creation_timestamp = db.Column(
        db.DateTime(timezone=True), server_default=func.now(), nullable=False
    )
    timestamp = db.Column(
        db.DateTime(timezone=True),
        server_default=func.now(),
        onupdate=func.now(),
        nullable=False,
    )
    related_vulnerabilities = db.Column(JSONB, default=[])
    meta = db.Column(JSONB, default={})

    # foreign keys
    author_id = db.Column(db.Integer(), db.ForeignKey("user.id"), nullable=False)
